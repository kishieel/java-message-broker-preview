/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url = "https://maven.pkg.github.com/kishieel/java-message-broker"
        credentials {
            username = githubActor
            password = githubToken
        }
    }
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
    testImplementation("org.springframework.boot:spring-boot-starter-test")

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-mustache")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation ('pl.edu.pk.student.tomaszkisiel.jmb:server:1.0.0') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

    runtimeOnly("org.springframework.boot:spring-boot-devtools")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

tasks.register('runMailing', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "pl.edu.pk.student.tomaszkisiel.jmb.preview.mailing.MailingMicroservice"
}

tasks.register('runUsers', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "pl.edu.pk.student.tomaszkisiel.jmb.preview.users.UsersMicroservice"
}

tasks.register('runPubsub', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = "pl.edu.pk.student.tomaszkisiel.jmb.preview.pubsub.PubSubMicroservice"
}